!function(e){var t={};function s(i){if(t[i])return t[i].exports;var n=t[i]={i:i,l:!1,exports:{}};return e[i].call(n.exports,n,n.exports,s),n.l=!0,n.exports}s.m=e,s.c=t,s.d=function(e,t,i){s.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:i})},s.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.t=function(e,t){if(1&t&&(e=s(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(s.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var n in e)s.d(i,n,function(t){return e[t]}.bind(null,n));return i},s.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(t,"a",t),t},s.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},s.p="",s(s.s=0)}([function(e,t,s){"use strict";s.r(t);const i=e=>{return`${(e.getMonth()+1).toString().padStart(2,"0")}/${e.getDate().toString().padStart(2,"0")}`};var n={userInfo:({nickname:e})=>`\n  <div class="friendrequest-toggle">Friend requests\n    <div class="friendrequest-badge"></div>\n  </div>\n  <div class="friendrequest-list"></div>\n  <div class="delimeter">|</div>\n  <div class="user">\n    <div class="user__picture"></div>\n    <div class="user__nickname">${e}</div>\n  </div>\n  <div class="delimeter">|</div>\n  <div class="sign-out">Sign out</div>\n  `,resultItem:({_id:e,email:t,nickname:s})=>`\n  <div class="search__user-item" data-id="${e}">\n    <div class="search__user-name">${s}</div>\n    <div class="search__user-email">${t}</div>\n    <div class="search__user-relationship">\n      <button class="button button--friendrequest">Add</button>\n    </div>\n  </div>`,friendrequest:({_id:e,from:t})=>`\n  <div class="friendrequest" data-id="${e}">\n    <div class="friendrequest__nickname">${t.nickname}</div>\n    <div class="friendrequest__buttons">\n      <button class="button button--accept-friend" data-answer="accept">Accept</button>\n      <button class="button button--decline-friend" data-answer="decline">Decline</button>\n    </div>\n  </div>`,friend:({_id:e,nickname:t})=>`\n    <div class="friend" data-id="${e}">\n      <div class="friend-content">\n        <div class="friend__picture"></div>\n        <div class="friend__popover">\n          <div class="friend__popover-triangle"></div>\n          <div class="friend__popover-content">\n            <div class="friend__nickname">${t}</div>\n            <div class="friend__buttons">\n              <button class="button button--message" data-behavior="message">Message</button>\n              <button class="button button--remove-friend" data-behavior="remove">Remove</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>`,room:({_id:e,users:t,lastMessage:s,createdAt:n})=>`\n  <div class="room" data-id="${e}">\n    <div class="room__picture"></div>\n    <div class="room__info"><div class="room__info-center">\n        <div class="room__name">${t.map(e=>e.nickname).join(", ")}</div>\n        <div class="room__last-message">${s?s.text:"new room"}</div>\n      </div>\n      <div class="room__last-message-date">${i(s?new Date(s.createdAt):new Date(n))}</div>\n    </div>\n  </div>`,message:({type:e,sender:t,createdAt:s,text:i})=>"text"===e?`\n  <div class="chat__message">\n    <div class="chat__message-picture"></div>\n    <div class="chat__message-content">\n      <div class="chat__message-header">\n        <div class="chat__message-sender">${t.nickname}</div>\n        <div class="chat__message-created-at">${(e=>{return`${(e.getHours()+1).toString().padStart(2,"0")}:${e.getMinutes().toString().padStart(2,"0")}`})(new Date(s))}</div>\n      </div>\n      <div class="chat__message-body">${i}</div>\n    </div>\n  </div>`:`\n  <div class="chat__status-log">${i}</div>`,selectedUser:({_id:e,nickname:t})=>`\n  <div class="selected-user" data-id="${e}">\n    <input class="selected-user__checkbox" type="checkbox"></input>\n    <label class="selected-user__nickname">${t}</label>\n  </div>\n  `};class r{constructor({friendrequestList:e,toggle:t,badge:s}){this.$friendrequestList=e,this.$toggle=t,this.$friendrequestBadge=s,this.friendrequests={},this.length=0,this.isOpened=!1,this._registerAllEventListeners()}_registerAllEventListeners(){this.$toggle.addEventListener("click",e=>{this.isOpened||(this.open(),e.stopPropagation())}),this.$friendrequestList.addEventListener("click",e=>{if(e.stopPropagation(),"BUTTON"!==e.target.tagName)return;const t=e.target.dataset.answer,s=e.target.closest(".friendrequest");this.response(s,t),this.remove(s)})}open(){this.isOpened=!0,this.$friendrequestList.classList.add("friendrequest-list--active"),window.addEventListener("click",this.close.bind(this),{once:!0})}close(){this.isOpened=!1,this.$friendrequestList.classList.remove("friendrequest-list--active")}add(e){this.friendrequests[e._id]=e,this.$friendrequestList.insertAdjacentHTML("beforeend",n.friendrequest(e)),this.increase()}response(e,t){this.friendrequests[e.dataset.id][t]().catch(e=>console.error.bind(console,e))}remove(e){const t=e.dataset.id;this.$friendrequestList.removeChild(e),delete this.friendrequests[t],this.decrease()}increase(){0===this.length&&this.$friendrequestBadge.classList.add("friendrequest-badge--active"),this.$friendrequestBadge.textContent=++this.length}decrease(){1===this.length&&this.$friendrequestBadge.classList.remove("friendrequest-badge--active"),this.$friendrequestBadge.textContent=--this.length}}let o=null;const d=new Messenger({apiKey:"2b8ed76c93763b0"}),c=document.querySelector(".user-info");d.initializeApp().catch(e=>console.error.bind(console,e));const a=new class{constructor({modal:e,openButton:t}){this.$modal=e,this.$openButton=t,this.$modalDialog=this.$modal.querySelector(".modal__dialog"),this.$modalContentContainer=this.$modal.querySelector(".modal__content-container"),this.$modalContentSliderNext=this.$modal.querySelector(".modal__content-slider--next"),this.$modalContentSliderBack=this.$modal.querySelector(".modal__content-slider--back"),this.$signUpForm=this.$modal.querySelector(".form--sign-up"),this.$signUpInputEmail=this.$signUpForm.querySelector('input[name="email"]'),this.$signUpInputPassword=this.$signUpForm.querySelector('input[name="password"]'),this.$signUpInputNickname=this.$signUpForm.querySelector('input[name="nickname"]'),this.$signInForm=this.$modal.querySelector(".form--sign-in"),this.$signInInputEmail=this.$signInForm.querySelector('input[name="email"]'),this.$signInInputPassword=this.$signInForm.querySelector('input[name="password"]'),this._registerEventListeners()}_registerEventListeners(){this.$openButton.addEventListener("click",this.open.bind(this)),this.$modalContentSliderNext.addEventListener("click",()=>{this.$modalContentContainer.classList.add("modal__content-container--next")}),this.$modalContentSliderBack.addEventListener("click",()=>{this.$modalContentContainer.classList.remove("modal__content-container--next")})}open(){const e=({target:t})=>{if(this.$modalDialog.contains(t))return window.addEventListener("click",e,{once:!0,capture:!0});this.close()};this.$modal.classList.add("modal--active"),window.addEventListener("click",e,{once:!0,capture:!0})}close(){this.$modalContentContainer.classList.remove("modal__content-container--next"),this.$signInForm.reset(),this.$signUpForm.reset(),this.$modal.classList.remove("modal--active")}onUserCreated(e){this.$signUpForm.addEventListener("submit",t=>{t.preventDefault();const s=this.$signUpInputEmail.value,i=this.$signUpInputPassword.value,n=this.$signUpInputNickname.value;e(s,i,n).then(this.close.bind(this)).catch(e=>console.error.bind(console,e))})}onUserSignedIn(e){this.$signInForm.addEventListener("submit",t=>{t.preventDefault();const s=this.$signInInputEmail.value,i=this.$signInInputPassword.value;e(s,i).then(this.close.bind(this)).catch(e=>console.error.bind(console,e))})}}({modal:document.querySelector(".modal"),openButton:document.querySelector(".sign-in")});a.onUserCreated(d.createUser.bind(d)),a.onUserSignedIn(d.signIn.bind(d));const l=new class{constructor({search:e}){this.$search=e,this.$searchForm=this.$search.querySelector("form"),this.$input=this.$search.querySelector("input"),this.$result=this.$search.querySelector(".search__result"),this._registerAllEventListeners()}_registerAllEventListeners(){this.$searchForm.addEventListener("submit",e=>{e.preventDefault()}),this.$search.addEventListener("click",e=>{const t=({target:e})=>{this.$search.contains(e)||(window.removeEventListener("click",t,!0),this.close())};window.addEventListener("click",t,!0)})}onValueRequested(e){this.$input.addEventListener("input",async({target:{value:t}})=>{if(""===t)return this.close();this.execute();const s=new RegExp(`^${t}`),i=await e(s);this.render(i)})}onFriendRequested(e){this.$result.addEventListener("click",({target:t})=>{if("BUTTON"!==t.tagName)return;const s=t.closest(".search__user-item").dataset.id;e(s)})}render(e){const t=e.length>0?e.reduce((e,t)=>e+n.resultItem(t),""):'<div class="search__no-item">no result</div>';this.$search.classList.remove("search--loading"),this.$search.classList.add("search--complete"),this.$result.innerHTML=t}initialze(){this.$result.innerHTML=""}execute(){this.initialze(),this.$search.classList.add("search--loading")}close(){this.initialze(),this.$search.classList.remove("search--loading"),this.$search.classList.remove("search--complete")}}({search:document.querySelector(".search")});l.onValueRequested(d.searchUsers.bind(d)),l.onFriendRequested(e=>{o.requestFriend(e).catch(e=>console.error(console,e))});let h=null,u=null;const m=new class{constructor({friendlist:e}){this.$friendList=e,this.$selectedFriend=null,this.selectedFriendId="",this.unselectWithThisBind=this.unselect.bind(this),this.friends=[],this._registerAllEventListeners()}_registerAllEventListeners(){this.$friendList.addEventListener("click",e=>{if(e.stopPropagation(),"friend__picture"!==e.target.className)return;const t=e.target.closest(".friend");this.select(t)})}onFriendRemoved(e){this.$friendList.addEventListener("click",t=>{if(t.stopPropagation(),"BUTTON"===t.target.tagName&&"remove"===t.target.dataset.behavior){if(!confirm("정말 친구 관계를 끊으시겠습니까?"))return this.unselectAndRemoveListener();e(this.selectedFriendId),this.unselectAndRemoveListener()}})}onRoomCreated(e){this.$friendList.addEventListener("click",t=>{t.stopPropagation(),"BUTTON"===t.target.tagName&&"message"===t.target.dataset.behavior&&(e(this.selectedFriendId),this.unselectAndRemoveListener())})}add(e){this.friends.push(e),this.$friendList.insertAdjacentHTML("beforeend",n.friend(e))}select(e){return null===this.$selectedFriend?this.selectFirst(e):this.$selectedFriend===e?this.unselectAndRemoveListener():(this.unselect(),e.classList.add("friend--selected"),this.$selectedFriend=e,void(this.selectedFriendId=e.dataset.id))}selectFirst(e){e.classList.add("friend--selected"),this.$selectedFriend=e,this.selectedFriendId=e.dataset.id,window.addEventListener("click",this.unselectWithThisBind,{once:!0})}unselectAndRemoveListener(){this.unselect(),window.removeEventListener("click",this.unselectWithThisBind,{once:!0})}unselect(){this.$selectedFriend.classList.remove("friend--selected"),this.$selectedFriend=null,this.selectedFriendId=""}remove(e){const t=this.$friendList.querySelector(`.friend[data-id="${e._id}"]`);this.friends=this.friends.filter(t=>t._id!==e._id),this.$friendList.removeChild(t)}getAllFriends(){return this.friends.slice()}}({friendlist:document.querySelector(".friend-list")});m.onFriendRemoved(e=>{o.removeFriend(e).catch(e=>console.error(console,e))}),m.onRoomCreated(e=>{o.createRoom({inviteUserIds:[e]}).catch(e=>console.error(console,e))});const v=new class{constructor({roomList:e}){this.$roomList=e,this.rooms={}}onRoomSelected(e){this.$roomList.addEventListener("click",({target:t})=>{const s=t.closest(".room");if(!s)return;const i=this.rooms[s.dataset.id];e(i)})}add(e){this.$roomList.insertAdjacentHTML("beforeend",n.room(e)),this.rooms[e._id]=e}remove(e){const t=e._id,s=this.$roomList.querySelector(`.room[data-id="${t}"]`);this.$roomList.removeChild(s),delete this.rooms[t]}update(e){const t=e._id,s=this.$roomList.querySelector(`.room[data-id="${t}"]`),i=s.querySelector(".room__name"),n=s.querySelector(".room__last-message");i.textContent=e.users.map(e=>e.nickname).join(", "),n.textContent=e.lastMessage.text,this.rooms[t]=e}}({roomList:document.querySelector(".room-list")}),$=new class{constructor({chat:e}){this.$chat=e,this.$chatBody=this.$chat.querySelector(".chat__body"),this.$roomName=this.$chat.querySelector(".chat__room-name"),this.$userNumber=this.$chat.querySelector(".chat__user-number"),this.$form=this.$chat.querySelector(".chat__form"),this.$input=this.$chat.querySelector(".chat__input"),this.$buttonLeaveRoom=this.$chat.querySelector(".button--leave-room"),this.$buttonInviteUser=this.$chat.querySelector(".button--invite-user"),this.currentRoom=null,this.openRoom=null,this.closeRoom=null}onMessageSubmitted(e){this.$form.addEventListener("submit",t=>{t.preventDefault();const s=this.$input.value;this.$input.value="",""!==s&&e({room:this.currentRoom,text:s})})}onRoomOpened(e){this.openRoom=e}onRoomClosed(e){this.closeRoom=e}onLeaveRoomButtonClicked(e){this.$buttonLeaveRoom.addEventListener("click",()=>{e(this.currentRoom).catch(e=>console.error.bind(console,e)),this.closeRoom(this.currentRoom),this.$chatBody.innerHTML="",this.$chat.classList.remove("chat--active"),this.currentRoom=null})}onInviteButtonClick(e){this.$buttonInviteUser.addEventListener("click",()=>{e()})}load(e){this.currentRoom&&this.closeRoom(this.currentRoom),this.render(e),this.openRoom(e,{onMessage:this.addMessage.bind(this),onUpdate:this.updateRoom.bind(this)}),this.currentRoom=e}render(e){this.$chatBody.innerHTML="",this.$chat.classList.add("chat--active"),this.$roomName.textContent=e.users.map(e=>e.nickname).join(", "),this.$userNumber.textContent=e.users.length}addMessage(e){this.$chatBody.insertAdjacentHTML("beforeend",n.message(e))}updateRoom(e){this.$roomName.textContent=e.users.map(e=>e.nickname).join(", "),this.$userNumber.textContent=e.users.length,this.currentRoom=e}inviteUsers(e){e.forEach(e=>{this.currentRoom.addUser(e._id)})}}({chat:document.querySelector(".chat")});v.onRoomSelected($.load.bind($));const g=new class{constructor({selectedUserList:e}){this.$selectedUserList=e,this.$selectedUserWrap=this.$selectedUserList.querySelector(".selected-user-wrap"),this.$confirmButton=this.$selectedUserList.querySelector(".button--confirm"),this.users=null,this.selectedUsers=[],this.loadUsers=null,this._registerAllEventListeners()}_registerAllEventListeners(){this.$selectedUserList.addEventListener("click",({target:e})=>{if("INPUT"!==e.tagName)return;const t=e.closest(".selected-user").dataset.id;e.checked?this.selectUser(t):this.unselectUser(t)})}onLoadUsers(e){this.loadUsers=e}onConfirmButtonClicked(e){this.$confirmButton.addEventListener("click",()=>{e(this.selectedUsers),this.close()})}open(){this.users=this.loadUsers(),this.$selectedUserList.classList.add("selected-user-list--active"),this.$selectedUserWrap.innerHTML=this.users.reduce((e,t)=>e+n.selectedUser(t),"")}selectUser(e){const t=this.users.find(t=>t._id===e);this.selectedUsers=this.selectedUsers.concat(t)}unselectUser(e){this.selectedUsers=this.selectedUsers.filter(t=>t._id!==e)}close(){this.users=null,this.selectedUsers=[],this.$selectedUserList.classList.remove("selected-user-list--active")}}({selectedUserList:document.querySelector(".selected-user-list")});g.onLoadUsers(m.getAllFriends.bind(m)),g.onConfirmButtonClicked($.inviteUsers.bind($)),$.onInviteButtonClick(g.open.bind(g)),d.onUserStateChanged(e=>{if(!e)return location.replace("http://localhost:3001");c.innerHTML=n.userInfo(e),h=new r({friendrequestList:document.querySelector(".friendrequest-list"),toggle:document.querySelector(".friendrequest-toggle"),badge:document.querySelector(".friendrequest-badge")}),(u=document.querySelector(".sign-out")).addEventListener("click",()=>{o.disconnect().catch(e=>console.error(console,e))}),(o=e).connect().catch(e=>console.error(console,e)),o.onFriendRequested(h.add.bind(h)),o.onFriendAdded(m.add.bind(m)),o.onFriendRemoved(m.remove.bind(m)),o.onFriendPresenceChanged(e=>{alert(`${e.nickname} is ${e.isPresent?"logined!":"logout:("}`)}),o.onRoomAdded(v.add.bind(v)),$.onMessageSubmitted(o.sendMessage.bind(o)),$.onRoomOpened(o.openRoom.bind(o)),$.onRoomClosed(o.closeRoom.bind(o)),$.onLeaveRoomButtonClicked(o.leaveRoom.bind(o)),o.onMessage(e=>{alert(`(currentUser.onMessage)${e.sender.nickname} : ${"text"===e.type?e.text:e.type}`)}),o.onRoomRemoved(v.remove.bind(v)),o.onRoomUpdated(v.update.bind(v))})}]);